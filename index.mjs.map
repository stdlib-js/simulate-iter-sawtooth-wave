{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar isNonNegativeNumber = require( '@stdlib/assert-is-nonnegative-number' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {NonNegativeNumber} [options.amplitude] - peak amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isNonNegativeNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative number. Option: `%s`.', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar tan = require( '@stdlib/math-base-special-tan' );\nvar atan = require( '@stdlib/math-base-special-atan' );\nvar HALF_PI = require( '@stdlib/constants-float64-half-pi' );\nvar PI = require( '@stdlib/constants-float64-pi' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a sawtooth wave.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=10] - number of iterations before a waveform repeats\n* @param {NonNegativeNumber} [options.amplitude=1.0] - peak amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterSawtoothWave( opts );\n*\n* var v = iter.next().value;\n* // returns 0.0\n*\n* v = iter.next().value;\n* // returns ~0.5\n*\n* v = iter.next().value;\n* // returns ~1.0\n*\n* // ...\n*/\nfunction iterSawtoothWave( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar s;\n\tvar a;\n\tvar i;\n\n\topts = {\n\t\t'period': 10,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period; // normalize such that t ϵ [0,τ]\n\t}\n\tt -= 1;\n\ts = PI / opts.period;\n\ta = opts.amplitude / HALF_PI;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt += 1;\n\t\tt %= opts.period;\n\t\treturn {\n\t\t\t'value': a * atan( tan( s*t ) ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterSawtoothWave( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterSawtoothWave;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a sawtooth wave.\n*\n* @module @stdlib/simulate-iter-sawtooth-wave\n*\n* @example\n* var iterSawtoothWave = require( '@stdlib/simulate-iter-sawtooth-wave' );\n*\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterSawtoothWave( opts );\n*\n* var v = iter.next().value;\n* // returns 0.0\n*\n* v = iter.next().value;\n* // returns ~0.5\n*\n* v = iter.next().value;\n* // returns ~1.0\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n"],"names":["isPlainObject","require$$0","hasOwnProp","require$$1","isInteger","require$$2","isPrimitive","isPositiveInteger","require$$3","isNonNegativeInteger","require$$4","isNonNegativeNumber","require$$5","format","require$$6","setReadOnly","iteratorSymbol","tan","atan","HALF_PI","PI","validate","opts","options","period","TypeError","amplitude","offset","iter","main","iterSawtoothWave","FLG","err","t","s","a","i","arguments","length","next","end","factory","done","value","lib"],"mappings":";;sqCAsBA,IAAIA,EAAgBC,EAChBC,EAAaC,EACbC,EAAYC,EAAuCC,YACnDC,EAAoBC,EAAgDF,YACpEG,EAAuBC,EAAmDJ,YAC1EK,EAAsBC,EAAkDN,YACxEO,EAASC,EA6Db,ICnEIC,EAAcd,EACde,EAAiBb,EACjBc,EAAMZ,EACNa,EAAOV,EACPW,EAAUT,EACVU,EAAKR,EACLS,ED2BJ,SAAmBC,EAAMC,GACxB,OAAMvB,EAAeuB,GAGhBrB,EAAYqB,EAAS,YACzBD,EAAKE,OAASD,EAAQC,QAChBjB,EAAmBgB,EAAQC,SACzB,IAAIC,UAAWZ,EAAQ,yEAA0E,SAAUU,EAAQC,SAGvHtB,EAAYqB,EAAS,eACzBD,EAAKI,UAAYH,EAAQG,WACnBf,EAAqBY,EAAQG,YAC3B,IAAID,UAAWZ,EAAQ,0EAA2E,YAAaU,EAAQG,YAG3HxB,EAAYqB,EAAS,YACzBD,EAAKK,OAASJ,EAAQI,QAChBvB,EAAWmB,EAAQI,SACjB,IAAIF,UAAWZ,EAAQ,gEAAiE,SAAUU,EAAQI,SAG9GzB,EAAYqB,EAAS,UACzBD,EAAKM,KAAOL,EAAQK,MACdnB,EAAsBc,EAAQK,OAC5B,IAAIH,UAAWZ,EAAQ,2EAA4E,OAAQU,EAAQK,OAGrH,KA1BC,IAAIH,UAAWZ,EAAQ,qEAAsEU,KCuGtG,IAAAM,EAjGA,SAASC,EAAkBP,GAC1B,IAAID,EACAM,EACAG,EACAC,EACAC,EACAC,EACAC,EACAC,EAQJ,GANAd,EAAO,CACNE,OAAU,GACVE,UAAa,EACbC,OAAU,EACVC,KAAQ,OAEJS,UAAUC,SACdN,EAAMX,EAAUC,EAAMC,IAErB,MAAMS,EAqBR,OAlBAC,GAAMX,EAAKE,OAAOF,EAAKK,QAAWL,EAAKE,QAC9B,IACRS,GAAKX,EAAKE,QAEXS,GAAK,EACLC,EAAId,EAAKE,EAAKE,OACdW,EAAIb,EAAKI,UAAYP,EACrBiB,EAAI,EAIJrB,EADAa,EAAO,GACY,OAAQW,GAC3BxB,EAAaa,EAAM,SAAUY,GAGxBxB,GACJD,EAAaa,EAAMZ,EAAgByB,GAE7Bb,EAQP,SAASW,IAER,OADAH,GAAK,EACAL,GAAOK,EAAId,EAAKM,KACb,CACNc,MAAQ,IAGVT,GAAK,EACLA,GAAKX,EAAKE,OACH,CACNmB,MAASR,EAAIjB,EAAMD,EAAKiB,EAAED,IAC1BS,MAAQ,IAWV,SAASF,EAAKG,GAEb,OADAZ,GAAM,EACDM,UAAUC,OACP,CACNK,MAASA,EACTD,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAASD,IACR,OAAOX,EAAkBR,KCpG3BsB,EALe3C"}